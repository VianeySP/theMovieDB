//
//  LoginViewController.swift
//  TheMovieDB
//
//  Created by Sandy Sánchez on 16/03/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//
import UIKit

final class LoginViewController: UIViewController {
    
    // MARK: - Public properties -
    
    var presenter: LoginPresenterInterface!
    
    @IBOutlet weak var emailLabel: UILabel!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordLabel: UILabel!
    @IBOutlet weak var passwordTextfield: UITextField!
    @IBOutlet weak var movieImageConstrain: NSLayoutConstraint!
    @IBOutlet weak var fieldsContentView: UIView!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        emailTextField.delegate = self
        passwordTextfield.delegate = self
        movieImageConstrain.constant = self.view.layer.frame.height / 3
        fieldsContentView.layer.cornerRadius = 16
        initializeHideKeyboard()
        emailTextField.tag = 1
        passwordTextfield.tag = 2
        createToolbar()
        emailTextField.text = UserDefaults.standard.string(forKey: "mail") ?? ""
    }
    
    func initializeHideKeyboard() {
        let tap: UITapGestureRecognizer = UITapGestureRecognizer(target: self,
                                                                 action: #selector(dismissMyKeyboard))
        view.addGestureRecognizer(tap)
    }
    
    @objc func dismissMyKeyboard() {
        view.endEditing(true)
    }
    
    func createToolbar() {
        let bar = UIToolbar()
        let doneBtn = UIBarButtonItem(title: "Ok", style: .plain, target: self, action: #selector(dismissMyKeyboard))
        let flexSpace = UIBarButtonItem(barButtonSystemItem: .flexibleSpace, target: nil, action: nil)
        bar.items = [flexSpace, flexSpace, doneBtn]
        bar.sizeToFit()
        emailTextField.inputAccessoryView = bar
        passwordTextfield.inputAccessoryView = bar
    }
    
    
    func isValidEmail(_ email: String) -> Bool {
        let emailRegex = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,64}$"
        let emailPredicate = NSPredicate(format: "SELF MATCHES[c] %@", emailRegex)
        return emailPredicate.evaluate(with: email)
    }
    
    @IBAction func logInAction(_ sender: Any) {
        let mail = emailTextField.text?.uppercased()
        let password = passwordTextfield.text?.uppercased()
        
        guard mail != "" else {
            ATAlert.displayAlert(viewController: self,
                                 title: "Aviso",
                                 subtitle: "El campo correo es obligatorio",
                                 autoHide: true,
                                 needConfirmation: false,
                                 action: {})
            return
        }
        
        guard password != "" else {
            ATAlert.displayAlert(viewController: self,
                                 title: "Aviso",
                                 subtitle: "El campo password es obligatorio",
                                 autoHide: true,
                                 needConfirmation: false,
                                 action: {})
            return
        }
        
        let validMail = UserDefaults.standard.string(forKey: "mail")
        let validPassword = UserDefaults.standard.string(forKey: "password")

        if isValidEmail(emailTextField.text!) {
            if validMail == nil {
                UserDefaults.standard.set(emailTextField.text, forKey: "mail")
                UserDefaults.standard.set(passwordTextfield.text, forKey: "password")
                presenter.performLogIn()
            }else if emailTextField.text == validMail && passwordTextfield.text == validPassword {
                presenter.performLogIn()
            }else {
                ATAlert.displayAlert(viewController: self,
                                     title: "Aviso",
                                     subtitle: "Datos incorrectos",
                                     autoHide: true,
                                     needConfirmation: false,
                                     action: {})
            }
        }else {
            ATAlert.displayAlert(viewController: self,
                                 title: "Aviso",
                                 subtitle: "Ingresar una dirección de correo valida",
                                 autoHide: true,
                                 needConfirmation: false,
                                 action: {})
        }
    }
    
}

// MARK: - Extensions -
extension LoginViewController: UITextFieldDelegate {
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
           if textField.text?.last == " " {
               if let char = string.cString(using: String.Encoding.utf8) {
                      let isBackSpace = strcmp(char, "\\b")
                      if (isBackSpace == -92) {
                          return true
                      }else {
                          return false
                      }
               }else { return true}
           }else {
               return true
           }
    }

    
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        if let nextField = self.view.viewWithTag(textField.tag + 1) as? UITextField {
            nextField.becomeFirstResponder()
        } else {
            textField.resignFirstResponder()
        }
        return false
    }
    
}

extension LoginViewController: LoginViewInterface {
}
